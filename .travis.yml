language: cpp
sudo: false

# At some point, we will test specific combinations of options, but not all permutations, so we use explicit matrix.
matrix:

  include:

  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - doxygen
        - python
        - mpich
        - libmpich-dev
        - libxml2-dev
        - libblas-dev
        - cmake
        - cmake-data
        - liblapack-dev
        - g++-6
        - gcc-6
    env:
      - GMX_MPI=OFF
      - GMX_THREAD_MPI=ON
      - gmxapi_DIR=$HOME/gromacs
      - GROMACS_DIR=$HOME/gromacs
      - GROMACS_TAG=devel
# Todo: GROMACS_TAG=devel needs to be fixed before merging to a release branch.
# What makes me uncomfortable is that this is not automatic, but maybe that is for the best. We should check the
# version dependencies before issuing a release or merging to master. This is described in RELEASE.txt

before_install:
  - uname -a
  - apt list --installed
  - test -n $CC  && unset CC
  - test -n $CXX && unset CXX
  - wget https://github.com/kassonlab/gromacs-gmxapi/archive/$GROMACS_TAG.zip
  - unzip $GROMACS_TAG.zip

install:
  - pushd gromacs-gmxapi-$GROMACS_TAG
  - mkdir build
  - pushd build
  - cmake -DCMAKE_INSTALL_PREFIX=$HOME/gromacs -DGMX_FFT_LIBRARY=fftpack -DGMX_GPU=OFF -DGMX_OPENMP=OFF -DGMX_SIMD=None -DGMX_USE_RDTSCP=OFF -DGMX_MPI=$GMX_MPI -DGMX_THREAD_MPI=$GMX_THREAD_MPI ..
  - make -j4 install
  - popd
  - popd
  - python -m pip install --upgrade pip --user
  - python -m pip install --upgrade setuptools --user
  - python -m pip install virtualenv --user
  - python -m pip install pytest --user
  - python -m pip install numpy --user
  - python -m pip install mpi4py --user
  - python -m pip install networkx --user
  - python -m pip install sphinx --user
  - python -m pip install sphinx_rtd_theme --user

script:
  - mkdir build
  - pushd build
  # install in user site-packages directory
  - GROMACS_DIR=$HOME/gromacs cmake .. -DPYTHON_EXECUTABLE=`which python` -DGMXAPI_USER_INSTALL=ON
  - make -j4 install
  - make -j4 docs
  - popd
  - mpiexec -n 2 python -m mpi4py -m pytest --log-cli-level=DEBUG --pyargs gmx -s --verbose
  - pip uninstall -y gmx
  # install in virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install numpy mpi4py networkx pytest
  - pushd build
  # Do an intentionally non-thorough job of removing previous build: test unclean build directory.
  - rm CMakeCache.txt
  - GROMACS_DIR=$HOME/gromacs cmake .. -DPYTHON_EXECUTABLE=`which python`
  - make -j4 install
  - popd
  - mpiexec -n 2 python -m mpi4py -m pytest --log-cli-level=DEBUG --pyargs gmx -s --verbose


